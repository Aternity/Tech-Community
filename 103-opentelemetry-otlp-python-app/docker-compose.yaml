# docker-compose.yaml
#
# Aternity Tech-Community
# 103-opentelemetry-otlp-python-app
# version: 22.2.4
#
# Usage
#   docker-compose up
#
# Example in Bash
#   export ATERNITY_SAAS_SERVER_HOST="agents.apm.myaccount.aternity.com"
#   export ATERNITY_CUSTOMER_ID="12341234-12341234-13241234"
#   docker-compose up
#
# Example in PowerShell
#   $env:ATERNITY_SAAS_SERVER_HOST="agents.apm.myaccount.aternity.com"
#   $env:ATERNITY_CUSTOMER_ID="12341234-12341234-13241234"
#   docker-compose up

version: "3.8"

services:

  opentelemetry-collector:

    # Aternity OpenTelemetry Collector
    # https://hub.docker.com/r/aternity/apm-collector

    image: registry.hub.docker.com/aternity/apm-collector:2022.3.0-3
    
    container_name: aternity-opentelemetry-collector
    
    environment:
    
      SERVER_URL: "wss://${ATERNITY_SAAS_SERVER_HOST}/?RPM_AGENT_CUSTOMER_ID=${ATERNITY_CUSTOMER_ID}"
    
    ports:

      # Uncomment the telemetry protocol used by the application

      # OpenTelemetry, https://opentelemetry.io
      - "4318:4318/tcp"     # OpenTelemetry OTLP JSON/Protobuf over HTTP
      # - "55681:55681/tcp" # OpenTelemetry OTLP JSON/Protobuf over HTTP
      # - "4317:4317/tcp"   # OpenTelemetry OTLP over gRPC
      
      # Jaeger, https://www.jaegertracing.io
      # - "14268:14268/tcp" # Jaeger Thrift Binary over HTTP
      # - "6831:6831/udp"   # Jaeger Thrift Compact
      # - "6832:6832/udp"   # Jaeger Thrift Binary
      
      # Zipkin, https://zipkin.io
      # - "5775:5775/udp"   # Jaeger's Thrift support for Zipkin v1
      # - "9411:9411/tcp"   # Zipkin v2 json/protobuf and v1 json/thrift

  service103_python:   
    
    environment:  
    
      OTEL_EXPORTER_OTLP_ENDPOINT: http://aternity-opentelemetry-collector:4318/v1/traces

      OTEL_SERVICE_NAME: service103_python

      PY_APP_URL: https://raw.githubusercontent.com/open-telemetry/opentelemetry-python/main/docs/examples/auto-instrumentation/server_uninstrumented.py
    
    ports:
      - "8103:80"

    image: registry.hub.docker.com/library/python:latest

    command: >
      bash -c "
        
        # Install prepreqs
        pip install -q opentelemetry-distro opentelemetry-exporter-otlp opentelemetry-propagator-b3 opentelemetry-instrumentation-flask flask requests  > /dev/null 2>&1 ;
        
        # Fetch the app
        curl -s -o app.py $$PY_APP_URL ;
        
        # Run with OpenTelemetry auto-instrumentation
        opentelemetry-instrument --traces_exporter otlp_proto_http flask run --port=80 --host="0.0.0.0"
        
        # DEBUG:  OpenTelemetry
        # opentelemetry-instrument --traces_exporter otlp_proto_http,console flask run --port=80 --host="0.0.0.0"
      "

  service103_traffic_generator:
    depends_on:
      - service103_python
    image: registry.hub.docker.com/alpine/curl:latest
    command: >
      /bin/sh -c "
        sleep 30; 
        while :; do
          curl http://service103_python:80/server_request > /dev/null 1>&1; 
          sleep 5;
        done
      "